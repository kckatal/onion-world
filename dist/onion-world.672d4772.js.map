{"mappings":"AAAA,kBAAkB;AAClB,MAAM,UAAU,SAAS,aAAa,CAAC;AACvC,MAAM,OAAO,SAAS,aAAa,CAAC;AAGpC,2BAA2B;AAC3B,SAAS;IACP,QAAQ,YAAY,CAAC,iBAAiB;IACtC,KAAK,SAAS,CAAC,GAAG,CAAC;AACrB;AAEA,4BAA4B;AAC5B,SAAS;IACP,QAAQ,YAAY,CAAC,iBAAiB;IACtC,KAAK,SAAS,CAAC,MAAM,CAAC;AACxB;AAEA,6BAA6B;AAC7B,SAAS;IACP,MAAM,OAAO,QAAQ,YAAY,CAAC;IAClC,SAAS,UAAU,mBAAmB;AACxC;AAEA,wCAAwC;AACxC,QAAQ,gBAAgB,CAAC,SAAS;AAElC,uCAAuC;AACvC,OAAO,gBAAgB,CAAC,SAAS,CAAC;IAChC,IAAI,EAAE,GAAG,KAAK,UAAU;QACtB,QAAQ,KAAK;QACb;IACF;AACF;AAEA,qCAAqC;AACrC,IAAI,OAAO,IAAI,OAAO,WAAW;AACjC,SAAS,cAAc,CAAC,eAAe,WAAW,GAAG;AAGrD,2CAA2C;AAC3C,SAAS,iBAAiB,QAAQ;IAChC,MAAM,aAAa,SAAS,aAAa,CAAC;IAC1C,WAAW,SAAS,GAAG;IAEvB,MAAM,cAAc,SAAS,aAAa,CAAC;IAC3C,YAAY,GAAG,GAAG,SAAS,YAAY;IACvC,YAAY,GAAG,GAAG,SAAS,OAAO;IAClC,YAAY,SAAS,GAAG;IAExB,MAAM,gBAAgB,SAAS,aAAa,CAAC;IAC7C,cAAc,SAAS,GAAG;IAE1B,MAAM,cAAc,SAAS,aAAa,CAAC;IAC3C,YAAY,SAAS,GAAG;IACxB,YAAY,WAAW,GAAG,SAAS,OAAO;IAE1C,MAAM,aAAa,SAAS,aAAa,CAAC;IAC1C,WAAW,IAAI,GAAG,SAAS,SAAS;IACpC,WAAW,SAAS,GAAG;IACvB,WAAW,MAAM,GAAG;IACpB,WAAW,WAAW,GAAG;IAEzB,yCAAyC;IACzC,cAAc,WAAW,CAAC;IAC1B,cAAc,WAAW,CAAC;IAC1B,WAAW,WAAW,CAAC;IACvB,WAAW,WAAW,CAAC;IAEvB,OAAO;AACT;AAEA,qDAAqD;AACrD,SAAS;IACP,yBAAyB;IACzB,MAAM,OAAO,SAAS,aAAa,CAAC;IACpC,KAAK,SAAS,GAAG;IAEjB,MAAM,8DACH,IAAI,CAAC,CAAA,WAAY,SAAS,IAAI,IAC9B,IAAI,CAAC,SAAS,QAAQ;QACrB,IAAI,QAAQ,SAAS,KAAK;QAC1B,IAAI,WAAW,MAAM,IAAI,CAAC,IAAM,MAAM,KAAK,MAAM;QACjD,IAAI,gBAAgB,SAAS,KAAK,CAAC,GAAG;QAEtC,cAAc,OAAO,CAAC,SAAS,IAAI;YACjC,MAAM,SAAS,KAAK,MAAM;YAC1B,MAAM,CAAC,qDAAqD,EAAE,QAAQ,EACnE,IAAI,CAAC,CAAA,WAAY,SAAS,IAAI,IAC9B,IAAI,CAAC,SAAS,OAAO;gBACpB,MAAM,WAAW,QAAQ,KAAK,CAAC,EAAE;gBACjC,QAAQ,GAAG,CAAC;gBAEZ,qCAAqC;gBACrC,MAAM,aAAa,iBAAiB;gBACpC,KAAK,WAAW,CAAC;YACnB;QACJ;IACF,GACC,KAAK,CAAC,CAAA;QACL,QAAQ,KAAK,CAAC,2BAA2B;IAC3C;AACJ;AAEA,iEAAiE;AACjE,SAAS,gBAAgB,CAAC,oBAAoB;IAC5C,uBAAuB;IACvB;IAEA,iDAAiD;IACjD,MAAM,gBAAgB,SAAS,cAAc,CAAC;IAC9C,cAAc,gBAAgB,CAAC,SAAS;AAC1C","sources":["script.js"],"sourcesContent":["//Global variables\nconst menuBtn = document.querySelector('.mobile-menu');\nconst menu = document.querySelector('.nav-list');\n\n\n// Open the navigation menu\nfunction openNavigation() {\n  menuBtn.setAttribute(\"aria-expanded\", \"true\");\n  menu.classList.add(\"active\");\n}\n\n// Close the navigation menu\nfunction closeNavigation() {\n  menuBtn.setAttribute(\"aria-expanded\", \"false\");\n  menu.classList.remove(\"active\");\n}\n\n// Toggle the navigation menu\nfunction toggleNavigation() {\n  const open = menuBtn.getAttribute(\"aria-expanded\");\n  open === \"false\" ? openNavigation() : closeNavigation();\n}\n\n// Add event listener to the menu button\nmenuBtn.addEventListener('click', toggleNavigation);\n\n// Add event listener to the escape key\nwindow.addEventListener(\"keyup\", (e) => {\n  if (e.key === \"Escape\") {\n    menuBtn.focus();\n    closeNavigation();\n  }\n});\n\n// Set the current year in the footer\nlet date = new Date().getFullYear();\ndocument.getElementById(\"currentYear\").textContent = date;\n\n\n// Function to create a recipe card element\nfunction createRecipeCard(fullMeal) {\n  const recipeCard = document.createElement('div');\n  recipeCard.className = 'recipe-card';\n  \n  const recipeImage = document.createElement('img');\n  recipeImage.src = fullMeal.strMealThumb;\n  recipeImage.alt = fullMeal.strMeal;\n  recipeImage.className = 'recipe-image';\n  \n  const recipeContent = document.createElement('div');\n  recipeContent.className = 'recipe-content';\n  \n  const recipeTitle = document.createElement('h3');\n  recipeTitle.className = 'recipe-title';\n  recipeTitle.textContent = fullMeal.strMeal;\n  \n  const recipeLink = document.createElement('a');\n  recipeLink.href = fullMeal.strSource;\n  recipeLink.className = 'recipe-link';\n  recipeLink.target = '_blank';\n  recipeLink.textContent = 'View Recipe â†’';\n  \n  // Append elements to build the structure\n  recipeContent.appendChild(recipeTitle);\n  recipeContent.appendChild(recipeLink);\n  recipeCard.appendChild(recipeImage);\n  recipeCard.appendChild(recipeContent);\n  \n  return recipeCard;\n}\n\n// Function to fetch and display random onion recipes\nfunction loadRandomRecipes() {\n  // Clear existing recipes\n  const grid = document.querySelector('.recipe-card-grid');\n  grid.innerHTML = '';\n  \n  fetch('https://www.themealdb.com/api/json/v1/1/filter.php?i=onion')\n    .then(response => response.json())\n    .then(function(dataResp) {\n      let meals = dataResp.meals;\n      let shuffled = meals.sort(() => 0.5 - Math.random());\n      let selectedMeals = shuffled.slice(0, 3);\n      \n      selectedMeals.forEach(function(meal) {\n        const mealId = meal.idMeal;\n        fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${mealId}`)\n          .then(response => response.json())\n          .then(function(mealExt) {\n            const fullMeal = mealExt.meals[0];\n            console.log(fullMeal);\n            \n            // Create recipe card and add to grid\n            const recipeCard = createRecipeCard(fullMeal);\n            grid.appendChild(recipeCard);\n          })\n      })\n    })\n    .catch(error => {\n      console.error('Error fetching recipes:', error);\n    });\n}\n\n// Once the DOM is loaded, load initial recipes and set up button\ndocument.addEventListener('DOMContentLoaded', function() {\n  // Load initial recipes\n  loadRandomRecipes();\n  \n  // Add event listener to \"Get New Recipes\" button\n  const newRecipesBtn = document.getElementById('newRecipesBtn');\n  newRecipesBtn.addEventListener('click', loadRandomRecipes);\n});\n\n"],"names":[],"version":3,"file":"onion-world.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}